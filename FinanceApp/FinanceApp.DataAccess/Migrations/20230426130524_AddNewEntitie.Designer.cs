// <auto-generated />
using System;
using FinanceApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceApp.DataAccess.Migrations
{
    [DbContext(typeof(HomeBudgetStorageContext))]
    [Migration("20230426130524_AddNewEntitie")]
    partial class AddNewEntitie
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MoneyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MoneyId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.GroupOfTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupOfTransaction");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Money", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupOfTransactionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GroupOfTransactionId");

                    b.ToTable("Money");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MoneyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MoneyId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Savings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MoneyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MoneyId");

                    b.ToTable("Savings");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Expenses", b =>
                {
                    b.HasOne("FinanceApp.DataAccess.Entities.Money", null)
                        .WithMany("Expenses")
                        .HasForeignKey("MoneyId");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Money", b =>
                {
                    b.HasOne("FinanceApp.DataAccess.Entities.GroupOfTransaction", "GroupOfTransaction")
                        .WithMany()
                        .HasForeignKey("GroupOfTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupOfTransaction");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Salary", b =>
                {
                    b.HasOne("FinanceApp.DataAccess.Entities.Money", null)
                        .WithMany("Bills")
                        .HasForeignKey("MoneyId");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Savings", b =>
                {
                    b.HasOne("FinanceApp.DataAccess.Entities.Money", null)
                        .WithMany("Savings")
                        .HasForeignKey("MoneyId");
                });

            modelBuilder.Entity("FinanceApp.DataAccess.Entities.Money", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Expenses");

                    b.Navigation("Savings");
                });
#pragma warning restore 612, 618
        }
    }
}
